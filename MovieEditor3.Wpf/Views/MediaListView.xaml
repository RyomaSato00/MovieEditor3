<UserControl x:Class="MovieEditor3.Wpf.Views.MediaListView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:local="clr-namespace:MovieEditor3.Wpf.Views" mc:Ignorable="d" d:DesignHeight="450"
  xmlns:mate="http://materialdesigninxaml.net/winfx/xaml/themes"
  xmlns:xaml="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:behavior="clr-namespace:MovieEditor3.Wpf.Behaviors"
  d:DesignWidth="800">
  <xaml:Interaction.Behaviors>
    <behavior:FileDropBehavior />
  </xaml:Interaction.Behaviors>
  
  <!-- ドロップイベントをバインド -->
  <xaml:Interaction.Triggers>
    <xaml:EventTrigger EventName="Drop">
      <xaml:InvokeCommandAction Command="{Binding DropCommand}" PassEventArgsToCommand="True" />
    </xaml:EventTrigger>
  </xaml:Interaction.Triggers>

  <Grid>
    <!--DataGridItemからViewModelへアクセスするためのProxy-->
    <FrameworkElement Name="DataContextProxy" DataContext="{Binding}" />

    <DataGrid x:Name="MovieList" SelectionMode="Extended" AutoGenerateColumns="False"
      CanUserAddRows="False" HeadersVisibility="All"
      ItemsSource="{Binding MediaItems}">

      <!-- 選択アイテム変更イベントをバインド -->
      <xaml:Interaction.Triggers>
        <xaml:EventTrigger EventName="SelectionChanged">
          <xaml:InvokeCommandAction Command="{Binding SelectionChangedCommand}" 
            CommandParameter="{Binding SelectedItems, ElementName=MovieList}"/>
        </xaml:EventTrigger>
      </xaml:Interaction.Triggers>
    
      <DataGrid.Columns>
        <!--チェックボックス-->
        <DataGridCheckBoxColumn Width="60" Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}">

          <!-- 全選択/全非選択操作用チェックボックス -->
          <DataGridCheckBoxColumn.Header>
            <Border Background="Transparent">
              <CheckBox IsChecked="{Binding DataContext.IsAllSelected.Value, Source={x:Reference DataContextProxy}}">
                <xaml:Interaction.Triggers>
                  <!-- チェックイベントをバインド -->
                  <xaml:EventTrigger EventName="Checked">
                    <xaml:InvokeCommandAction Command="{Binding DataContext.CheckedCommand, Source={x:Reference DataContextProxy}}" />
                  </xaml:EventTrigger>
                  <!-- 非チェックイベントをバインド -->
                  <xaml:EventTrigger EventName="Unchecked">
                    <xaml:InvokeCommandAction Command="{Binding DataContext.UncheckedCommand, Source={x:Reference DataContextProxy}}" />
                  </xaml:EventTrigger>
                </xaml:Interaction.Triggers>
              </CheckBox>
            </Border>
          </DataGridCheckBoxColumn.Header>

          <DataGridCheckBoxColumn.HeaderStyle>
            <Style TargetType="{x:Type DataGridColumnHeader}" 
              BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
              <Setter Property="HorizontalContentAlignment" Value="Center" />
            </Style>
          </DataGridCheckBoxColumn.HeaderStyle>
        </DataGridCheckBoxColumn>

        <!-- サムネイル -->
        <DataGridTemplateColumn Header="サムネイル">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding StartPointImagePath}" Height="72" Width="128" />
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>

        <!-- 削除ボタン -->
        <DataGridTemplateColumn Width="80">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Button Style="{StaticResource MaterialDesignIconForegroundButton}"
                Command="{Binding DataContext.DeleteCommand, Source={x:Reference DataContextProxy}}"
                CommandParameter="{Binding}"
                ToolTip="削除" >
                <mate:PackIcon Kind="TrashCanOutline" Width="20" Height="20" />
              </Button>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>

        <!-- 複製ボタン -->
        <DataGridTemplateColumn Width="80">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Button Style="{StaticResource MaterialDesignIconForegroundButton}"
                Command="{Binding DataContext.CloneCommand, Source={x:Reference DataContextProxy}}"
                CommandParameter="{Binding}"
                ToolTip="複製" >
                <mate:PackIcon Kind="ContentCopy" Width="20" Height="20" />
              </Button>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
      </DataGrid.Columns>
    </DataGrid>
  </Grid>
</UserControl>